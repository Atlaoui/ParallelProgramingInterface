
@inproceedings{baker_mpijava_1999,
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {{mpiJava}: {An} object-oriented java interface to {MPI}},
	isbn = {978-3-540-48932-0},
	shorttitle = {{mpiJava}},
	doi = {10.1007/BFb0097964},
	abstract = {A basic prerequisite for parallel programming is a good communication API. The recent interest in using Java for scientific and engineering application has led to several international efforts to produce a message passing interface to support parallel computation. In this paper we describe and then discuss the syntax, functionality and performance of one such interface, mpiJava, an object-oriented Java interface to MPI. We first discuss the design of the mpiJava API and the issues associated with its development. We then more on to briefly outline the steps necessary to ‘port’ mpiJava onto a range of operating systems, including Windows NT, Linux and Solaris. In the second part of the paper we present and then discuss some performance measurements made of communications bandwidth and latency to compare mpiJava on these systems. Finally, we summarise our experiences and then briefly mention work that we plan to undertake.},
	booktitle = {Parallel and {Distributed} {Processing}},
	publisher = {Springer},
	author = {Baker, Mark and Carpenter, Bryan and Fox, Geoffrey and Hoon Ko, Sung and Lim, Sang},
	editor = {Rolim, José and Mueller, Frank and Zomaya, Albert Y. and Ercal, Fikret and Olariu, Stephan and Ravindran, Binoy and Gustafsson, Jan and Takada, Hiroaki and Olsson, Ron and Kale, Laxmikant V. and Beckman, Pete and Haines, Matthew and ElGindy, Hossam and Caromel, Denis and Chaumette, Serge and Fox, Geoffrey and Pan, Yi and Li, Keqin and Yang, Tao and Chiola, G. and Conte, G. and Mancini, L. V. and Méry, Domenique and Sanders, Beverly and Bhatt, Devesh and Prasanna, Viktor},
	year = {1999},
	note = {Place: Berlin, Heidelberg},
	keywords = {Java Interface, Java Language Model, Java Native Interface, Message Passing, Share Memory},
	pages = {748--762},
	file = {Springer Full Text PDF:/home/max/git/ParallelProgramingInterface/Rapport_carnet/MPI_PEERSIM_SOURCES/files/6/Baker et al. - 1999 - mpiJava An object-oriented java interface to MPI.pdf:application/pdf}
}

@incollection{noauthor_notitle_nodate
}

@inproceedings{kazmi_peersim_2011,
	title = {{PeerSim}: {An} {Efficient} {Scalable} {Testbed} for {Heterogeneous} {Cluster}-based {P2P} {Network} {Protocols}},
	shorttitle = {{PeerSim}},
	doi = {10.1109/UKSIM.2011.86},
	abstract = {This research work explains different aspects of PeerSim simulator used to create nodes and simulate peer to peer overlay network topology generation protocols. PeerSimhas been tested over various protocols specifically designed to work with a heterogeneous environment and its efficiency and scalability is evaluated considering different properties of the nodes and network. These protocols are used to introduce clusters for efficient resource retrieval, behaviour of cooperation and security. PeerSim has proven to be a very efficient and scalable test bed for the generation of nodes through gossip based protocol and implementing different protocols on the nodes generated. The aim of this paper is to provide a detailed description and evaluation of PeerSimthrough study of already implemented protocols, for the researchers working in the field of P2P networking.},
	booktitle = {2011 {UkSim} 13th {International} {Conference} on {Computer} {Modelling} and {Simulation}},
	author = {Kazmi, Irum and Bukhari, Syed Fahim Yousaf},
	month = mar,
	year = {2011},
	keywords = {Java, computer network reliability, computer network security, Data structures, Efficiency, Encryption, gossip based protocol, heterogeneous cluster-based P2P network protocols, pattern clustering, Peer to peer computing, peer to peer overlay network topology, peer-to-peer computing, Peer-to-Peer Networks, PeerSim, PeerSim simulator, protocols, Protocols, resource retrieval, Scalability, Scalable Simulator, telecommunication network topology},
	pages = {420--425},
	annote = {ISSN: null},
	file = {IEEE Xplore Abstract Record:/home/max/git/ParallelProgramingInterface/Rapport_carnet/MPI_PEERSIM_SOURCES/files/16/5754257.html:text/html}
}

@article{naimi_log_1996,
	title = {A {Log} ({N}) {Distributed} {Mutual} {Exclusion} {Algorithm} {Based} on {Path} {Reversal}},
	volume = {34},
	issn = {0743-7315},
	url = {http://www.sciencedirect.com/science/article/pii/S0743731596900416},
	doi = {10.1006/jpdc.1996.0041},
	abstract = {In this paper, we present a distributed algorithm for mutual exclusion based on path reversal. The algorithm does not use logical clocks to serialize the concurrent events, and all the variables are bounded. When a process invokes a critical section, it sends a request to the tail of a queue. A dynamical rooted tree gives the path to this tail. The algorithm requires onlyO(log(n)) messages on average, wherenis the number of processes in the network. The performance analysis of the algorithm is based on generating formal power series.},
	number = {1},
	urldate = {2020-03-15},
	journal = {Journal of Parallel and Distributed Computing},
	author = {Naimi, Mohamed and Trehel, Michel and Arnold, André},
	month = apr,
	year = {1996},
	pages = {1--13},
	file = {Submitted Version:/home/max/git/ParallelProgramingInterface/Rapport_carnet/MPI_PEERSIM_SOURCES/files/49/Naimi et al. - 1996 - A Log (N) Distributed Mutual Exclusion Algorithm B.pdf:application/pdf}
}

@article{gropp_high-performance_1996,
	title = {A high-performance, portable implementation of the {MPI} message passing interface standard},
	volume = {22},
	number = {6},
	journal = {Parallel computing},
	author = {Gropp, William and Lusk, Ewing and Doss, Nathan and Skjellum, Anthony},
	year = {1996},
	pages = {789--828},
	annote = {Publisher: North-Holland},
	file = {Full Text:/home/max/git/ParallelProgramingInterface/Rapport_carnet/MPI_PEERSIM_SOURCES/files/23/Gropp et al. - 1996 - A high-performance, portable implementation of the.pdf:application/pdf}
}

@article{walker_mpi_1996,
	title = {{MPI}: a standard message passing interface},
	volume = {12},
	shorttitle = {{MPI}},
	journal = {Supercomputer},
	author = {Walker, David W. and Dongarra, Jack J.},
	year = {1996},
	pages = {56--68},
	annote = {Publisher: ASFRA BV},
	file = {Full Text:/home/max/git/ParallelProgramingInterface/Rapport_carnet/MPI_PEERSIM_SOURCES/files/25/Walker and Dongarra - 1996 - MPI a standard message passing interface.ps:application/postscript}
}

@article{carpenter_object_2000,
	title = {Object serialization for marshaling data in a {Java} interface to {MPI}},
	volume = {12},
	number = {7},
	journal = {Concurrency: Practice and Experience},
	author = {Carpenter, Bryan and Fox, Geoffrey and Ko, Sung Hoon and Lim, Sang},
	year = {2000},
	pages = {539--553},
	annote = {Publisher: Wiley Online Library},
	file = {Snapshot:/home/max/git/ParallelProgramingInterface/Rapport_carnet/MPI_PEERSIM_SOURCES/files/45/1096-9128(200005)127539AID-CPE4983.0.html:text/html}
}

@article{jelasity_basic_nodate,
	title = {A {Basic} {Event} {Driven} {Example} for {PeerSim} 1.0},
	language = {en},
	author = {Jelasity, Mark},
	pages = {7},
	file = {Jelasity - A Basic Event Driven Example for PeerSim 1.0.pdf:/home/max/Zotero/storage/JYGFP478/Jelasity - A Basic Event Driven Example for PeerSim 1.0.pdf:application/pdf}
}

@article{jesi_peersim_nodate,
	title = {{PeerSim} {HOWTO}: {Build} a new protocol for the {PeerSim} 1.0 simulator},
	language = {en},
	author = {Jesi, Gian Paolo},
	pages = {19},
	file = {Jesi - PeerSim HOWTO Build a new protocol for the PeerSi.pdf:/home/max/Zotero/storage/CIE35T82/Jesi - PeerSim HOWTO Build a new protocol for the PeerSi.pdf:application/pdf}
}

@misc{noauthor_open_nodate,
	title = {Open {MPI} v4.0.3 documentation},
	url = {https://www.open-mpi.org/doc/current/},
	urldate = {2020-03-16},
	file = {Open MPI v4.0.3 documentation:/home/max/Zotero/storage/5T2GZCB7/current.html:text/html}
}

@misc{noauthor_peersim_nodate,
	title = {{PeerSim} {P2P} {Simulator}},
	url = {http://peersim.sourceforge.net/#docs},
	urldate = {2020-03-16},
	file = {PeerSim P2P Simulator:/home/max/Zotero/storage/2JHZVKI6/peersim.sourceforge.net.html:text/html}
}