
@online{noauthor_creation_nodate,
	title = {Création du fichier .bib - Générer une bibliographie avec {BibTeX}},
	url = {https://sites.google.com/site/inf7000rencontre2/bibtex---batir-sa-bd-bibliographique/creation-du-fichier-bib},
	urldate = {2020-01-01},
	file = {Snapshot:files/2/creation-du-fichier-bib.html:text/html}
}

@inproceedings{jodoin_environnement_2009,
	location = {Grenoble, France},
	title = {L'environnement de développement dynamique ({EDD}) pour le prototypage rapide d'interfaces graphiques},
	isbn = {978-1-60558-461-4},
	url = {https://doi.org/10.1145/1629826.1629844},
	doi = {10.1145/1629826.1629844},
	series = {{IHM} '09},
	abstract = {We present an interactive development environment ({IDE}) designed and implemented at the Canadian Space Agency ({CSA}) to assist expert users in rapidly developing graphical user interface prototypes for the control of robotic systems. The Dynamic Development Environment ({DDE}) offers a highly flexible tool for interface design and development. The environment allows the direct manipulation and integration of running widgets to rapidly build a live interface. New widgets can be readily integrated and their behaviour tested within this environment, skipping code compilation and freeing the interface designer from most of the programming effort. Other {IDE}'s such as Netbeans, .Net and Eclipse require separate compilation and execution steps. The {DDE} offers a new possibility by allowing the user to test the interface while it is being built without the need to launch the platform again.},
	pages = {111--117},
	booktitle = {Proceedings of the 21st International Conference on Association Francophone d'Interaction Homme-Machine},
	publisher = {Association for Computing Machinery},
	author = {Jodoin, André and Desmarais, Michel},
	urldate = {2020-01-20},
	date = {2009-10-13},
	keywords = {distributed environments, {IDE}, interface description languages, {UIML}, visual programming, {XML}},
	file = {Full Text PDF:files/4/Jodoin and Desmarais - 2009 - L'environnement de développement dynamique (EDD) p.pdf:application/pdf}
}

@inproceedings{baker_mpijava_1999,
	location = {Berlin, Heidelberg},
	title = {{mpiJava}: An object-oriented java interface to {MPI}},
	isbn = {978-3-540-48932-0},
	doi = {10.1007/BFb0097964},
	series = {Lecture Notes in Computer Science},
	shorttitle = {{mpiJava}},
	abstract = {A basic prerequisite for parallel programming is a good communication {API}. The recent interest in using Java for scientific and engineering application has led to several international efforts to produce a message passing interface to support parallel computation. In this paper we describe and then discuss the syntax, functionality and performance of one such interface, {mpiJava}, an object-oriented Java interface to {MPI}. We first discuss the design of the {mpiJava} {API} and the issues associated with its development. We then more on to briefly outline the steps necessary to ‘port’ {mpiJava} onto a range of operating systems, including Windows {NT}, Linux and Solaris. In the second part of the paper we present and then discuss some performance measurements made of communications bandwidth and latency to compare {mpiJava} on these systems. Finally, we summarise our experiences and then briefly mention work that we plan to undertake.},
	pages = {748--762},
	booktitle = {Parallel and Distributed Processing},
	publisher = {Springer},
	author = {Baker, Mark and Carpenter, Bryan and Fox, Geoffrey and Hoon Ko, Sung and Lim, Sang},
	editor = {Rolim, José and Mueller, Frank and Zomaya, Albert Y. and Ercal, Fikret and Olariu, Stephan and Ravindran, Binoy and Gustafsson, Jan and Takada, Hiroaki and Olsson, Ron and Kale, Laxmikant V. and Beckman, Pete and Haines, Matthew and {ElGindy}, Hossam and Caromel, Denis and Chaumette, Serge and Fox, Geoffrey and Pan, Yi and Li, Keqin and Yang, Tao and Chiola, G. and Conte, G. and Mancini, L. V. and Méry, Domenique and Sanders, Beverly and Bhatt, Devesh and Prasanna, Viktor},
	date = {1999},
	langid = {english},
	keywords = {Java Interface, Java Language Model, Java Native Interface, Message Passing, Share Memory},
	file = {Springer Full Text PDF:files/6/Baker et al. - 1999 - mpiJava An object-oriented java interface to MPI.pdf:application/pdf}
}

@article{carpenter_mpj_2000,
	title = {{MPJ}: {MPI}-like message passing for Java},
	volume = {12},
	rights = {Copyright © 2000 John Wiley \& Sons, Ltd.},
	issn = {1096-9128},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/1096-9128%28200009%2912%3A11%3C1019%3A%3AAID-CPE518%3E3.0.CO%3B2-G},
	doi = {10.1002/1096-9128(200009)12:11<1019::AID-CPE518>3.0.CO;2-G},
	shorttitle = {{MPJ}},
	abstract = {Recently, there has been a lot of interest in using Java for parallel programming. Efforts have been hindered by lack of standard Java parallel programming {APIs}. To alleviate this problem, various groups started projects to develop Java message passing systems modelled on the successful Message Passing Interface ({MPI}). Official {MPI} bindings are currently defined only for C, Fortran, and C++, so early {MPI}-like environments for Java have been divergent. This paper relates an effort undertaken by a working group of the Java Grande Forum, seeking a consensus on an {MPI}-like {API}, to enhance the viability of parallel programming using Java. Copyright © 2000 John Wiley \& Sons, Ltd.},
	pages = {1019--1038},
	number = {11},
	journaltitle = {Concurrency: Practice and Experience},
	author = {Carpenter, Bryan and Getov, Vladimir and Judd, Glenn and Skjellum, Anthony and Fox, Geoffrey},
	urldate = {2020-03-02},
	date = {2000},
	langid = {english},
	keywords = {Java, Java Grande, message-passing, {MPI}},
	file = {Snapshot:files/8/1096-9128(200009)12111019AID-CPE5183.0.html:text/html;Full Text PDF:files/9/Carpenter et al. - 2000 - MPJ MPI-like message passing for Java.pdf:application/pdf}
}

@article{baker_mpijava_nodate,
	title = {{mpiJava}: A Java Interface to {MPI}},
	abstract = {The overall aim of this paper is to introduce {mpiJava}{\textbar}a Java interface to the widely used Message Passing Interface ({MPI}). In the rst part of the paper we discuss the design of the {mpiJava} {API} and issues associated with its development. In the second part of the paper we brie y describe an implementation of {mpiJava} on {NT} using the {WMPI} environment. We then discuss some measurements made of communications performance to compare {mpiJava} with C and Fortran bindings of {MPI}. In the nal part of the paper we summarize our ndings and brie y mention work we plan to undertake in the near future.},
	pages = {17},
	author = {Baker, Mark},
	langid = {english},
	file = {Baker - mpiJava A Java Interface to MPI.pdf:files/10/Baker - mpiJava A Java Interface to MPI.pdf:application/pdf}
}

@inproceedings{mintchev_towards_1997,
	location = {Berlin, Heidelberg},
	title = {Towards portable message passing in Java: Binding {MPI}},
	isbn = {978-3-540-69629-2},
	doi = {10.1007/3-540-63697-8_79},
	series = {Lecture Notes in Computer Science},
	shorttitle = {Towards portable message passing in Java},
	abstract = {In this paper we present a way of successfully tackling the difficulties of binding {MPI} to Java with a view to ensuring portability. We have created a tool for automatically binding existing native C libraries to Java, and have applied the Java-to-C Interface generating tool ({JCI}) to bind {MPI} to Java. The approach of automatic binding by {JCI} ensures both portability across different platforms and full compatibility with the {MPI} specification. To evaluate the resulting combination we have run a Java version of the {NAS} parallel {IS} benchmark on a distributed-memory {IBM} {SP}2 machine.},
	pages = {135--142},
	booktitle = {Recent Advances in Parallel Virtual Machine and Message Passing Interface},
	publisher = {Springer},
	author = {Mintchev, Sava and Getov, Vladimir},
	editor = {Bubak, Marian and Dongarra, Jack and Waśniewski, Jerzy},
	date = {1997},
	langid = {english},
	keywords = {Java Native Interface, Java Implementation, Java Version, Java Virtual Machine, Native Interface},
	file = {Springer Full Text PDF:files/13/Mintchev and Getov - 1997 - Towards portable message passing in Java Binding .pdf:application/pdf}
}

@incollection{noauthor_notitle_nodate
}

@inproceedings{kazmi_peersim_2011,
	title = {{PeerSim}: An Efficient Scalable Testbed for Heterogeneous Cluster-based P2P Network Protocols},
	doi = {10.1109/UKSIM.2011.86},
	shorttitle = {{PeerSim}},
	abstract = {This research work explains different aspects of {PeerSim} simulator used to create nodes and simulate peer to peer overlay network topology generation protocols. {PeerSimhas} been tested over various protocols specifically designed to work with a heterogeneous environment and its efficiency and scalability is evaluated considering different properties of the nodes and network. These protocols are used to introduce clusters for efficient resource retrieval, behaviour of cooperation and security. {PeerSim} has proven to be a very efficient and scalable test bed for the generation of nodes through gossip based protocol and implementing different protocols on the nodes generated. The aim of this paper is to provide a detailed description and evaluation of {PeerSimthrough} study of already implemented protocols, for the researchers working in the field of P2P networking.},
	eventtitle = {2011 {UkSim} 13th International Conference on Computer Modelling and Simulation},
	pages = {420--425},
	booktitle = {2011 {UkSim} 13th International Conference on Computer Modelling and Simulation},
	author = {Kazmi, Irum and Bukhari, Syed Fahim Yousaf},
	date = {2011-03},
	note = {{ISSN}: null},
	keywords = {Java, computer network reliability, computer network security, Data structures, Efficiency, Encryption, gossip based protocol, heterogeneous cluster-based P2P network protocols, pattern clustering, Peer to peer computing, peer to peer overlay network topology, peer-to-peer computing, Peer-to-Peer Networks, {PeerSim}, {PeerSim} simulator, protocols, Protocols, resource retrieval, Scalability, Scalable Simulator, telecommunication network topology},
	file = {IEEE Xplore Abstract Record:files/16/5754257.html:text/html}
}

@article{naimi_log_1996,
	title = {A Log (N) Distributed Mutual Exclusion Algorithm Based on Path Reversal},
	volume = {34},
	issn = {0743-7315},
	url = {http://www.sciencedirect.com/science/article/pii/S0743731596900416},
	doi = {10.1006/jpdc.1996.0041},
	abstract = {In this paper, we present a distributed algorithm for mutual exclusion based on path reversal. The algorithm does not use logical clocks to serialize the concurrent events, and all the variables are bounded. When a process invokes a critical section, it sends a request to the tail of a queue. A dynamical rooted tree gives the path to this tail. The algorithm requires {onlyO}(log(n)) messages on average, wherenis the number of processes in the network. The performance analysis of the algorithm is based on generating formal power series.},
	pages = {1--13},
	number = {1},
	journaltitle = {Journal of Parallel and Distributed Computing},
	author = {Naimi, Mohamed and Trehel, Michel and Arnold, André},
	urldate = {2020-03-15},
	date = {1996-04-10},
	langid = {english},
	file = {Submitted Version:files/49/Naimi et al. - 1996 - A Log (N) Distributed Mutual Exclusion Algorithm B.pdf:application/pdf}
}

@article{gropp_high-performance_1996,
	title = {A high-performance, portable implementation of the {MPI} message passing interface standard},
	volume = {22},
	pages = {789--828},
	number = {6},
	journaltitle = {Parallel computing},
	author = {Gropp, William and Lusk, Ewing and Doss, Nathan and Skjellum, Anthony},
	date = {1996},
	note = {Publisher: North-Holland},
	file = {Full Text:files/23/Gropp et al. - 1996 - A high-performance, portable implementation of the.pdf:application/pdf}
}

@book{gropp_using_1999,
	title = {Using {MPI}: portable parallel programming with the message-passing interface},
	volume = {1},
	shorttitle = {Using {MPI}},
	publisher = {{MIT} press},
	author = {Gropp, William and Gropp, William D. and Lusk, Ewing and Lusk, Argonne Distinguished Fellow Emeritus Ewing and Skjellum, Anthony},
	date = {1999},
	file = {Snapshot:files/24/books.html:text/html}
}

@article{walker_mpi_1996,
	title = {{MPI}: a standard message passing interface},
	volume = {12},
	shorttitle = {{MPI}},
	pages = {56--68},
	journaltitle = {Supercomputer},
	author = {Walker, David W. and Dongarra, Jack J.},
	date = {1996},
	note = {Publisher: {ASFRA} {BV}},
	file = {Full Text:files/25/Walker and Dongarra - 1996 - MPI a standard message passing interface.ps:application/postscript}
}

@article{karonis_mpich-g2_2003,
	title = {{MPICH}-G2: A grid-enabled implementation of the message passing interface},
	volume = {63},
	shorttitle = {{MPICH}-G2},
	pages = {551--563},
	number = {5},
	journaltitle = {Journal of Parallel and Distributed Computing},
	author = {Karonis, Nicholas T. and Toonen, Brian and Foster, Ian},
	date = {2003},
	note = {Publisher: Elsevier},
	file = {Full Text:files/26/Karonis et al. - 2003 - MPICH-G2 A grid-enabled implementation of the mes.pdf:application/pdf;Snapshot:files/27/S0743731503000029.html:text/html}
}

@inproceedings{geist_mpi-2_1996,
	title = {{MPI}-2: Extending the message-passing interface},
	shorttitle = {{MPI}-2},
	pages = {128--135},
	booktitle = {European Conference on Parallel Processing},
	publisher = {Springer},
	author = {Geist, Al and Gropp, William and Huss-Lederman, Steve and Lumsdaine, Andrew and Lusk, Ewing and Saphir, William and Skjellum, Tony and Snir, Marc},
	date = {1996},
	file = {Full Text:files/28/Geist et al. - 1996 - MPI-2 Extending the message-passing interface.pdf:application/pdf;Snapshot:files/29/3-540-61626-8_16.html:text/html}
}

@inproceedings{morin_jmpi_2002,
	title = {{JMPI}: Implementing the message passing standard in Java},
	shorttitle = {{JMPI}},
	pages = {6--pp},
	booktitle = {Proceedings 16th International Parallel and Distributed Processing Symposium. {IPDPS} 2002},
	author = {Morin, Steven and Koren, Israel and Krishna, C. Mani},
	date = {2002},
	file = {Full Text:files/41/Morin et al. - 2002 - JMPI Implementing the message passing standard in.pdf:application/pdf}
}

@inproceedings{dincer_ubiquitous_1999,
	title = {A ubiquitous message passing interface implementation in Java: jmpi},
	shorttitle = {A ubiquitous message passing interface implementation in Java},
	pages = {203--207},
	booktitle = {Proceedings 13th International Parallel Processing Symposium and 10th Symposium on Parallel and Distributed Processing. {IPPS}/{SPDP} 1999},
	publisher = {{IEEE}},
	author = {Dincer, Kivanc},
	date = {1999},
	file = {Full Text:files/42/Dincer - 1999 - A ubiquitous message passing interface implementat.pdf:application/pdf;Snapshot:files/43/760461.html:text/html}
}

@article{thiruvathukal_java_2000,
	title = {Java on networks of workstations ({JavaNOW}): a parallel computing framework inspired by Linda and the Message Passing Interface ({MPI})},
	volume = {12},
	shorttitle = {Java on networks of workstations ({JavaNOW})},
	pages = {1093--1116},
	number = {11},
	journaltitle = {Concurrency: Practice and Experience},
	author = {Thiruvathukal, George K. and Dickens, Phillip M. and Bhatti, Shahzad},
	date = {2000},
	note = {Publisher: Wiley Online Library},
	file = {Snapshot:files/44/1096-9128(200009)12111093AID-CPE5223.0.html:text/html}
}

@article{carpenter_object_2000,
	title = {Object serialization for marshaling data in a Java interface to {MPI}},
	volume = {12},
	pages = {539--553},
	number = {7},
	journaltitle = {Concurrency: Practice and Experience},
	author = {Carpenter, Bryan and Fox, Geoffrey and Ko, Sung Hoon and Lim, Sang},
	date = {2000},
	note = {Publisher: Wiley Online Library},
	file = {Snapshot:files/45/1096-9128(200005)127539AID-CPE4983.0.html:text/html}
}