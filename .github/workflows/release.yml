name: release
on:
  push:
    branches:
      - release
jobs:
  release:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download Peersim
        run: |
          wget http://downloads.sourceforge.net/project/peersim/peersim-1.0.5.zip
          unzip peersim-1.0.5.zip
          cp peersim-1.0.5/*.jar lib

      - name: Bump version and push tag
        id: tag
        uses: mathieudutour/github-tag-action@v4.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          create_annotated_tag: true
          tag_prefix: ''
          release_branches: release

      - name: Restore Maven cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Package jar
        run: |
          git fetch
          mvn package -Dmpi.path=$PWD/lib -Dpeersim.path=$PWD/lib --no-transfer-progress

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.tag.outputs.new_version}}
          release_name: Release ${{ steps.tag.outputs.new_version}}
          body: ${{ steps.tag.outputs.changelog}}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./target/ppi-${{ steps.tag.outputs.new_version}}-bundle.jar
          asset_name: ppi.jar
          asset_content_type: application/java-archive

      - name: Set up Maven Settings for deploy
        uses: s4u/maven-settings-action@v2.3.0

      - name: Publish package
        run: mvn --batch-mode deploy -Dmpi.path=$PWD/lib -Dpeersim.path=$PWD/lib
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Javadoc
        run: mvn javadoc:javadoc -Dmpi.path=$PWD/lib -Dpeersim.path=$PWD/lib --no-transfer-progress

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v3
        if: ${{ github.event_name == 'push' }}
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: target/site/apidocs # The folder the action should deploy.
