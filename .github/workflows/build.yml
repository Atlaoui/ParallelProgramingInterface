# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - &checkout
      name: Checkout branch
      uses: actions/checkout@v1

    - &setup_java
      name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - &downloads_peersim
      name: Download Peersim
      run: |
        wget http://downloads.sourceforge.net/project/peersim/peersim-1.0.5.zip
        unzip peersim-1.0.5.zip
        cp peersim-1.0.5/*.jar lib

    - &maven_cache
      name: Restore Maven cache
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Add Maven problem matcher
      run: echo "::add-matcher::.github/matchers/maven.json"

    - name: Run tests
      run: mvn install -Dmpi.path=$PWD/lib -Dpeersim.path=$PWD/lib --no-transfer-progress

    - name: Upload bundled jar
      uses: actions/upload-artifact@v2
      if: ${{ github.event_name == 'push' }}
      with:
        name: ppi-master-bundle.jar
        path: target/ppi-*-bundle.jar

    - name: Build Javadoc
      run: mvn javadoc:javadoc -Dmpi.path=$PWD/lib -Dpeersim.path=$PWD/lib --no-transfer-progress

    - name: Remove Maven problem matcher
      run: echo "::remove-matcher owner=maven::"

    - name: Deploy ðŸš€
      uses: JamesIves/github-pages-deploy-action@releases/v3
      if: ${{ github.event_name == 'push' }}
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages # The branch the action should deploy to.
        FOLDER: target/site/apidocs # The folder the action should deploy.

  check:
    runs-on: ubuntu-latest
    steps:
    - *checkout
    - *setup_java
    - *downloads_peersim
    - *maven_cache

    - name: PMD check
      run: mvn -Dmpi.path=$PWD/lib -Dpeersim.path=$PWD/lib pmd:pmd --no-transfer-progress

    - name: Add PMD annotations
      uses: jwgmeligmeyling/pmd-github-action@v1
      with:
        path: 'target/pmd.xml'

    - name: Check prettier
      run: mvn -Dmpi.path=$PWD/lib -Dpeersim.path=$PWD/lib prettier:check --no-transfer-progress
